{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "2.8.0.0",
    "parameters": {
        "f5ResourceGroup": {
            "type": "string",
            "defaultValue": "f5rg"
        },
        "uniqueString": {
            "metadata": {
                "description": "REQUIRED - A prefix that will be used to name template resources. Because some resources require globally unique names, we recommend using a unique value."
            },
            "type": "string"
        },
        "externalLoadBalancerName": {
            "defaultValue": "None",
            "metadata": {
                "description": "Valid values include 'None', or an external load balancer name. A value of 'None' will not create external load balancer. Specifying a name creates a external load balancer with the name specified."
            },
            "type": "string"
        },
        "internalLoadBalancerName": {
            "defaultValue": "None",
            "metadata": {
                "description": "Valid values include 'None', or an internal load balancer name. A value of 'None' will not create internal load balancer. Specifying a name creates a internal load balancer with the name specified."
            },
            "type": "string"
        },
        "internalSubnetId": {
            "defaultValue": "",
            "metadata": {
                "description": "Enter subnet id to use for frontend internal load balancer configuration. If you specified None for provision internal load balancer, this setting has no effect."
            },
            "type": "string"
        },
        "loadBalancerRulePorts": {
            "defaultValue": [
                "80",
                "443"
            ],
            "metadata": {
                "description": "Valid values include valid tcp ports. Enter an array of ports your applications use. Example: '[80,443,445]'"
            },
            "type": "array"
        },
        "numberPublicExternalIpAddresses": {
            "defaultValue": 1,
            "allowedValues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
            ],
            "metadata": {
                "description": "Enter the number of public external ip address to create. At least one is required to build ELB."
            },
            "type": "int"
        },
        "numberPublicMgmtIpAddresses": {
            "defaultValue": 0,
            "allowedValues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
            ],
            "metadata": {
                "description": "Enter the number of public mgmt ip addresses to create."
            },
            "type": "int"
        },
        "tagValues": {
            "defaultValue": {
                "application": "f5demoapp",
                "cost": "f5cost",
                "environment": "f5env",
                "group": "f5group",
                "owner": "f5owner"
            },
            "metadata": {
                "description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
            },
            "type": "object"
        }
    },
    "variables": {
        "resourceDeploymentName": "[take(concat(deployment().name, '-dag'), 64)]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('resourceDeploymentName')]",
            "resourceGroup": "[parameters('f5ResourceGroup')]",
            "dependsOn": [],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "uniqueString": {
                        "value": "[parameters('uniqueString')]"
                    },
                    "externalLoadBalancerName": {
                        "value": "[parameters('externalLoadBalancerName')]"
                    },
                    "internalLoadBalancerName": {
                        "value": "[parameters('internalLoadBalancerName')]"
                    },
                    "internalSubnetId": {
                        "value": "[parameters('internalSubnetId')]"
                    },
                    "loadBalancerRulePorts": {
                        "value": "[parameters('loadBalancerRulePorts')]"
                    },
                    "numberPublicExternalIpAddresses": {
                        "value": "[parameters('numberPublicExternalIpAddresses')]"
                    },
                    "numberPublicMgmtIpAddresses": {
                        "value": "[parameters('numberPublicMgmtIpAddresses')]"
                    },
                    "tagValues": {
                        "value": "[parameters('tagValues')]"
                    }
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "uniqueString": {
                            "type": "string"
                        },
                        "externalLoadBalancerName": {
                            "type": "string"
                        },
                        "internalLoadBalancerName": {
                            "type": "string"
                        },
                        "internalSubnetId": {
                            "type": "string"
                        },
                        "loadBalancerRulePorts": {
                            "type": "array"
                        },
                        "numberPublicExternalIpAddresses": {
                            "type": "int"
                        },
                        "numberPublicMgmtIpAddresses": {
                            "type": "int"
                        },
                        "tagValues": {
                            "type": "object"
                        }
                    },
                    "variables": {
                        "appLoadBalancerFrontEnd": "[if(equals(parameters('numberPublicMgmtIpAddresses'), 0), variables('constructFrontEndIPConfigID'), union(variables('constructFrontEndIPConfigID'), variables('mgmtLoadBalancerFrontEnd')))]",
                        "copy": [
                            {
                                "count": "[parameters('numberPublicExternalIpAddresses')]",
                                "input": {
                                    "name": "[concat('loadBalancerFrontEnd', copyIndex('constructFrontEndIPConfigID'))]",
                                    "properties": {
                                        "publicIPAddress": {
                                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('uniqueString'), '-app-pip-0', copyIndex('constructFrontEndIPConfigID', 1)))]"
                                        }
                                    }
                                },
                                "name": "constructFrontEndIPConfigID"
                            },
                            {
                                "count": "[variables('loadBalancerRulePortsLength')]",
                                "input": {
                                    "name": "[concat('app-', parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerRule')])]",
                                    "properties": {
                                        "backendAddressPool": {
                                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('externalLoadBalancerName'), 'loadBalancerBackEnd')]"
                                        },
                                        "backendPort": "[parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerRule')]]",
                                        "frontendIPConfiguration": {
                                            "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', parameters('externalLoadBalancerName'), 'loadBalancerFrontEnd0')]"
                                        },
                                        "frontendPort": "[parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerRule')]]",
                                        "idleTimeoutInMinutes": 15,
                                        "loadDistribution": "SourceIP",
                                        "probe": {
                                            "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('externalLoadBalancerName'), concat('tcp_probe_', parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerRule')]))]"
                                        },
                                        "protocol": "Tcp"
                                    }
                                },
                                "name": "constructLoadBalancerRule"
                            },
                            {
                                "count": "[variables('loadBalancerRulePortsLength')]",
                                "input": {
                                    "name": "[concat('tcp_probe_', parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerProbes')])]",
                                    "properties": {
                                        "intervalInSeconds": 15,
                                        "numberOfProbes": 3,
                                        "port": "[parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerProbes')]]",
                                        "protocol": "Tcp"
                                    }
                                },
                                "name": "constructLoadBalancerProbes"
                            },
                            {
                                "count": "[variables('loadBalancerRulePortsLength')]",
                                "input": {
                                    "name": "[concat('app-internal-', parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerRuleInternal')])]",
                                    "properties": {
                                        "backendAddressPool": {
                                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('internalLoadBalancerName'), 'loadBalancerBackEnd')]"
                                        },
                                        "backendPort": "[parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerRuleInternal')]]",
                                        "frontendIPConfiguration": {
                                            "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', parameters('internalLoadBalancerName'), 'loadBalancerFrontEnd')]"
                                        },
                                        "frontendPort": "[parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerRuleInternal')]]",
                                        "idleTimeoutInMinutes": 15,
                                        "loadDistribution": "SourceIP",
                                        "probe": {
                                            "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('internalLoadBalancerName'), concat('tcp_probe_internal_', parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerRuleInternal')]))]"
                                        },
                                        "protocol": "Tcp"
                                    }
                                },
                                "name": "constructLoadBalancerRuleInternal"
                            },
                            {
                                "count": "[variables('loadBalancerRulePortsLength')]",
                                "input": {
                                    "name": "[concat('tcp_probe_internal_', parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerProbesInternal')])]",
                                    "properties": {
                                        "intervalInSeconds": 15,
                                        "numberOfProbes": 3,
                                        "port": "[parameters('loadBalancerRulePorts')[copyIndex('constructLoadBalancerProbesInternal')]]",
                                        "protocol": "Tcp"
                                    }
                                },
                                "name": "constructLoadBalancerProbesInternal"
                            }
                        ],
                        "uniqueString": "[toLower(parameters('uniqueString'))]",
                        "inboundNatPoolsArray": [
                            {
                                "name": "sshnatpool",
                                "properties": {
                                    "backendPort": 22,
                                    "frontendIPConfiguration": {
                                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', parameters('externalLoadBalancerName'), 'loadBalancerMgmtFrontEnd')]"
                                    },
                                    "frontendPortRangeEnd": 50100,
                                    "frontendPortRangeStart": 50001,
                                    "protocol": "Tcp"
                                }
                            },
                            {
                                "name": "mgmtnatpool",
                                "properties": {
                                    "backendPort": 8443,
                                    "frontendIPConfiguration": {
                                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', parameters('externalLoadBalancerName'), 'loadBalancerMgmtFrontEnd')]"
                                    },
                                    "frontendPortRangeEnd": 50200,
                                    "frontendPortRangeStart": 50101,
                                    "protocol": "Tcp"
                                }
                            }
                        ],
                        "loadBalancerBackEnd": [
                            {
                                "name": "loadBalancerBackEnd"
                            }
                        ],
                        "loadBalancerBackEndArray": "[if(equals(parameters('numberPublicMgmtIpAddresses'), 0), variables('loadBalancerBackEnd'), union(variables('loadBalancerBackEnd'), variables('loadBalancerMgmtBackEnd')))]",
                        "loadBalancerMgmtBackEnd": [
                            {
                                "name": "loadBalancerMgmtBackEnd"
                            }
                        ],
                        "loadBalancerRulePortsLength": "[length(parameters('loadBalancerRulePorts'))]",
                        "loadBalancingProbesArray": "[variables('constructLoadBalancerProbes')]",
                        "loadBalancingRulesArray": "[variables('constructLoadBalancerRule')]",
                        "loadBalancingProbesArrayInternal": "[variables('constructLoadBalancerProbesInternal')]",
                        "loadBalancingRulesArrayInternal": "[variables('constructLoadBalancerRuleInternal')]",
                        "mgmtLoadBalancerFrontEnd": [
                            {
                                "name": "loadBalancerMgmtFrontEnd",
                                "properties": {
                                    "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('uniqueString'), '-mgmt-pip-01'))]"
                                    }
                                }
                            }
                        ],
                        "outboundRuleConfigArray": [
                            {
                                "name": "outboundRuleForInit",
                                "properties": {
                                    "backendAddressPool": {
                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('externalLoadBalancerName'), 'loadBalancerMgmtBackEnd')]"
                                    },
                                    "frontendIPConfigurations": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', parameters('externalLoadBalancerName'), 'loadBalancerMgmtFrontEnd')]"
                                        }
                                    ],
                                    "protocol": "All"
                                }
                            }
                        ]
                    },
                    "resources": [
                        {
                            "apiVersion": "2020-06-01",
                            "condition": "[greater(parameters('numberPublicExternalIpAddresses'), 0)]",
                            "copy": {
                                "count": "[parameters('numberPublicExternalIpAddresses')]",
                                "name": "apppipcopy"
                            },
                            "location": "[resourceGroup().location]",
                            "name": "[concat(variables('uniqueString'), '-app-pip-0', copyIndex(1))]",
                            "properties": {
                                "dnsSettings": {
                                    "domainNameLabel": "[concat(variables('uniqueString'), '-app', copyIndex(0))]"
                                },
                                "idleTimeoutInMinutes": 30,
                                "publicIPAllocationMethod": "Static"
                            },
                            "sku": {
                                "name": "Standard"
                            },
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
                            "type": "Microsoft.Network/publicIPAddresses"
                        },
                        {
                            "apiVersion": "2020-06-01",
                            "condition": "[not(equals(toLower(parameters('externalLoadBalancerName')), string('none')))]",
                            "dependsOn": [
                                "apppipcopy"
                            ],
                            "location": "[resourceGroup().location]",
                            "name": "[if(not(equals(tolower(parameters('externalLoadBalancerName')), string('none'))), parameters('externalLoadBalancerName'), string('none1'))]",
                            "properties": {
                                "backendAddressPools": "[variables('loadBalancerBackEndArray')]",
                                "frontendIPConfigurations": "[variables('appLoadBalancerFrontEnd')]",
                                "inboundNatPools": "[if(equals(parameters('numberPublicMgmtIpAddresses'), 0), json('null'), variables('inboundNatPoolsArray'))]",
                                "loadBalancingRules": "[variables('loadBalancingRulesArray')]",
                                "outboundRules": "[if(equals(parameters('numberPublicMgmtIpAddresses'), 0), json('null'), variables('outboundRuleConfigArray'))]",
                                "probes": "[variables('loadBalancingProbesArray')]"
                            },
                            "sku": {
                                "name": "Standard"
                            },
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
                            "type": "Microsoft.Network/loadBalancers"
                        },
                        {
                            "apiVersion": "2020-06-01",
                            "condition": "[not(equals(toLower(parameters('internalLoadBalancerName')), string('none')))]",
                            "location": "[resourceGroup().location]",
                            "name": "[parameters('internalLoadBalancerName')]",
                            "properties": {
                                "backendAddressPools": [
                                    {
                                        "name": "loadBalancerBackEnd"
                                    }
                                ],
                                "frontendIPConfigurations": [
                                    {
                                        "name": "loadBalancerFrontEnd",
                                        "properties": {
                                            "privateIPAllocationMethod": "Dynamic",
                                            "subnet": {
                                                "id": "[parameters('internalSubnetId')]"
                                            }
                                        }
                                    }
                                ],
                                "loadBalancingRules": "[variables('loadBalancingRulesArrayInternal')]",
                                "probes": "[variables('loadBalancingProbesArrayInternal')]"
                            },
                            "sku": {
                                "name": "Standard"
                            },
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
                            "type": "Microsoft.Network/loadBalancers"
                        }
                    ],
                    "outputs": {
                        "externalIpIds": {
                            "condition": "[greater(parameters('numberPublicExternalIpAddresses'), 0)]",
                            "copy": {
                                "count": "[parameters('numberPublicExternalIpAddresses')]",
                                "input": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('uniqueString'), '-app-pip-0', copyIndex(1)))]"
                            },
                            "type": "array"
                        },
                        "externalIps": {
                            "condition": "[greater(parameters('numberPublicExternalIpAddresses'), 0)]",
                            "copy": {
                                "count": "[parameters('numberPublicExternalIpAddresses')]",
                                "input": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('uniqueString'), '-app-pip-0', copyIndex(1)))).ipAddress]"
                            },
                            "type": "array"
                        },
                        "externalIpDns": {
                            "condition": "[greater(parameters('numberPublicExternalIpAddresses'), 0)]",
                            "copy": {
                                "count": "[parameters('numberPublicExternalIPAddresses')]",
                                "input": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('uniqueString'), '-app-pip-0', copyIndex(1)))).dnsSettings.fqdn]"
                            },
                            "type": "array"
                        },
                        "externalBackEndLoadBalancerId": {
                            "condition": "[not(equals(toLower(parameters('externalLoadBalancerName')), string('none')))]",
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('externalLoadBalancerName'), 'loadBalancerBackEnd')]"
                        },
                        "externalBackEndMgmtLoadBalancerId": {
                            "condition": "[and(not(equals(toLower(parameters('externalLoadBalancerName')), string('none'))), greater(parameters('numberPublicMgmtIpAddresses'), 0))]",
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('externalLoadBalancerName'), 'loadBalancerMgmtBackEnd')]"
                        },
                        "externalFrontEndLoadBalancerId": {
                            "condition": "[not(equals(toLower(parameters('externalLoadBalancerName')), string('none')))]",
                            "copy": {
                                "count": "[parameters('numberPublicExternalIpAddresses')]",
                                "input": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('externalLoadBalancerName'), concat('loadBalancerFrontEnd', copyIndex()))]"
                            },
                            "type": "array"
                        },
                        "externalFrontEndLoadBalancerInboundId": {
                            "condition": "[and(not(equals(toLower(parameters('externalLoadBalancerName')), string('none'))), equals(parameters('numberPublicMgmtIpAddresses'), 0))]",
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('externalLoadBalancerName'), 'loadBalancerMgmtFrontEnd')]"
                        },
                        "externalFrontEndMgmtLoadBalancerId": {
                            "condition": "[and(not(equals(toLower(parameters('externalLoadBalancerName')), string('none'))), greater(parameters('numberPublicMgmtIpAddresses'), 0))]",
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('externalLoadBalancerName'), 'loadBalancerMgmtFrontEnd')]"
                        },
                        "externalLoadBalancer": {
                            "condition": "[not(equals(toLower(parameters('externalLoadBalancerName')), string('none')))]",
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/loadBalancers', parameters('externalLoadBalancerName'))]"
                        },
                        "externalLoadBalancerProbesId": {
                            "condition": "[not(equals(toLower(parameters('externalLoadBalancerName')), string('none')))]",
                            "copy": {
                                "count": "[variables('loadBalancerRulePortsLength')]",
                                "input": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('externalLoadBalancerName'), concat('tcp_probe_', parameters('loadBalancerRulePorts')[copyIndex()]))]"
                            },
                            "type": "array"
                        },
                        "externalLoadBalancerRulesId": {
                            "condition": "[not(equals(toLower(parameters('externalLoadBalancerName')), string('none')))]",
                            "copy": {
                                "count": "[variables('loadBalancerRulePortsLength')]",
                                "input": "[resourceId('Microsoft.Network/loadBalancers/loadBalancingRules', parameters('externalLoadBalancerName'), concat('app-', parameters('loadBalancerRulePorts')[copyIndex()]))]"
                            },
                            "type": "array"
                        },
                        "inboundMgmtNatPool": {
                            "condition": "[and(not(equals(toLower(parameters('externalLoadBalancerName')), string('none'))), greater(parameters('numberPublicMgmtIpAddresses'), 0))]",
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', parameters('externalLoadBalancerName'), 'mgmtnatpool')]"
                        },
                        "inboundSshNatPool": {
                            "condition": "[and(not(equals(toLower(parameters('externalLoadBalancerName')), string('none'))), greater(parameters('numberPublicMgmtIpAddresses'), 0))]",
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', parameters('externalLoadBalancerName'), 'sshnatpool')]"
                        },
                        "internalBackEndLoadBalancerId": {
                            "condition": "[not(equals(toLower(parameters('internalLoadBalancerName')), string('none')))]",
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('internalLoadBalancerName'), 'loadBalancerBackEnd')]"
                        },
                        "internalFrontEndLoadBalancerIp": {
                            "condition": "[not(equals(toLower(parameters('internalLoadBalancerName')), string('none')))]",
                            "type": "string",
                            "value": "[reference(parameters('internalLoadBalancerName')).frontendIPConfigurations[0].properties.privateIPAddress]"
                        },
                        "internalLoadBalancerProbesId": {
                            "condition": "[not(equals(toLower(parameters('internalLoadBalancerName')), string('none')))]",
                            "copy": {
                                "count": "[variables('loadBalancerRulePortsLength')]",
                                "input": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('internalLoadBalancerName'), concat('tcp_probe_internal_', parameters('loadBalancerRulePorts')[copyIndex()]))]"
                            },
                            "type": "array"
                        },
                        "internalLoadBalancer": {
                            "condition": "[not(equals(toLower(parameters('internalLoadBalancerName')), string('none')))]",
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancerName'))]"
                        },
                        "mgmtIpIds": {
                            "condition": "[greater(parameters('numberPublicMgmtIpAddresses'), 0)]",
                            "copy": {
                                "count": "[parameters('numberPublicMgmtIpAddresses')]",
                                "input": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('uniqueString'), '-mgmt-pip-0', copyIndex(1)))]"
                            },
                            "type": "array"
                        },
                        "mgmtIps": {
                            "condition": "[greater(parameters('numberPublicMgmtIpAddresses'), 0)]",
                            "copy": {
                                "count": "[parameters('numberPublicMgmtIpAddresses')]",
                                "input": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('uniqueString'), '-mgmt-pip-0', copyIndex(1)))).ipAddress]"
                            },
                            "type": "array"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "deployment": {
            "type": "string",
            "value": "[concat(deployment().name, ' has successfully deployed.')]"
        },
        "externalIpIds": {
            "type": "array",
            "value": "[reference('networkTemplate').outputs.externalIpIds.value]"
        },
        "externalIps": {
            "type": "array",
            "value": "[reference('networkTemplate').outputs.externalIps.value]"
        },
        "externalIpDns": {
            "type": "array",
            "value": "[reference('networkTemplate').outputs.externalIpDns.value]"
        },
        "externalBackEndLoadBalancerId": {
            "type": "string",
            "value": "[reference('networkTemplate').outputs.externalBackEndLoadBalancerId.value]"
        },
        "externalBackEndMgmtLoadBalancerId": {
            "type": "string",
            "value": "[reference('networkTemplate').outputs.externalBackEndMgmtLoadBalancerId.value]"
        },
        "externalFrontEndLoadBalancerId": {
            "type": "array",
            "value": "[reference('networkTemplate').outputs.externalFrontEndLoadBalancerId.value]"
        },
        "externalFrontEndLoadBalancerInboundId": {
            "type": "string",
            "value": "[reference('networkTemplate').outputs.externalFrontEndLoadBalancerInboundId.value]"
        },
        "externalFrontEndMgmtLoadBalancerId": {
            "type": "string",
            "value": "[reference('networkTemplate').outputs.externalFrontEndMgmtLoadBalancerId.value]"
        },
        "externalLoadBalancer": {
            "type": "string",
            "value": "[reference('networkTemplate').outputs.externalLoadBalancer.value]"
        },
        "externalLoadBalancerProbesId": {
            "type": "array",
            "value": "[reference('networkTemplate').outputs.externalLoadBalancerProbesId.value]"
        },
        "externalLoadBalancerRulesId": {
            "type": "array",
            "value": "[reference('networkTemplate').outputs.externalLoadBalancerRulesId.value]"
        },
        "inboundMgmtNatPool": {
            "type": "string",
            "value": "[reference('networkTemplate').outputs.inboundMgmtNatPool.value]"
        },
        "inboundSshNatPool": {
            "type": "string",
            "value": "[reference('networkTemplate').outputs.inboundSshNatPool.value]"
        },
        "internalBackEndLoadBalancerId": {
            "type": "string",
            "value": "[reference('networkTemplate').outputs.internalBackEndLoadBalancerId.value]"
        },
        "internalFrontEndLoadBalancerIp": {
            "type": "string",
            "value": "[reference('networkTemplate').outputs.internalFrontEndLoadBalancerIp.value]"
        },
        "internalLoadBalancerProbesId": {
            "type": "array",
            "value": "[reference('networkTemplate').outputs.internalLoadBalancerProbesId.value]"
        },
        "internalLoadBalancer": {
            "type": "string",
            "value": "[reference('networkTemplate').outputs.internalLoadBalancer.value]"
        },
        "mgmtIpIds": {
            "type": "array",
            "value": "[reference('networkTemplate').outputs.mgmtIpIds.value]"
        },
        "mgmtIps": {
            "type": "array",
            "value": "[reference('networkTemplate').outputs.mgmtIps.value]"
        }
    }
}
