{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "2.8.0.0",
    "parameters": {
        "f5ResourceGroup": {
            "type": "string",
            "defaultValue": "f5rg"
        },
        "createNatGateway": {
            "defaultValue": false,
            "metadata": {
                "description": "You must select Yes to create a NAT gateway to allow outbound access when deploying a standalone BIG-IP VE without a public management IP address. Note: The NAT gateway is applied to subnet0."
            },
            "type": "bool"
        },
        "vnetName": {
            "defaultValue": "virtualNetwork",
            "type": "string",
            "metadata": {
                "description": "Supply a name for the virtual network."
            }
        },
        "vnetAddressPrefix": {
            "defaultValue": "10.0",
            "type": "string",
            "metadata": {
                "description": "Enter the start of the CIDR block used when creating the vnet and subnets.  You MUST type just the first two octets of the /16 virtual network that will be created, for example '10.0', '10.100', 192.168'."
            }
        },
        "vnetCidrNotation": {
            "defaultValue": "22",
            "type": "string",
            "metadata": {
                "description": "Enter the the value for the CIDR notation (ex. 16 for /16, 24 for /24) that will be applied to the subnets created within the virtual network."
            }
        },
        "subnetMask": {
            "defaultValue": "24",
            "type": "string",
            "metadata": {
                "description": "Enter the the value for the CIDR notation (ex. 16 for /16, 24 for /24) that will be applied to the subnets created within the virtual network."
            }
        },
        "f5SubnetName": {
            "defaultValue": "f5-big-ip-subnet",
            "type": "string",
            "metadata": {
                "description": "Enter the name of the subnet that will hold the F5 Big IP VE appliances."
            }
        },
        "allowedSourceIpToMgmt": {
            "defaultValue": "10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16",
            "type": "String",
            "metadata": {
                "description": "Source IP Addresses Or CIDRs That Are Allowed Inbound On Ports 3389 and 22 to the spoke separated by commas."
            }
        },
        "allowedSourceIpToApp": {
            "defaultValue": "10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16",
            "type": "String",
            "metadata": {
                "description": "Source IP Addresses Or CIDRs That Are Allowed Inbound On Ports 3389 and 22 to the spoke separated by commas."
            }
        },
        "natGatewayName": {
            "defaultValue": "natgw-f5",
            "type": "string",
            "metadata": {
                "description": "Enter the name of the NAT Gateway that will be associated with the F5 Big IP VE subnet."
            }
        },
        "tagValues": {
            "defaultValue": {
                "application": "f5demoapp",
                "cost": "f5cost",
                "environment": "f5env",
                "group": "f5group",
                "owner": "f5owner"
            },
            "type": "object",
            "metadata": {
                "description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
            }
        }
    },
    "variables": {
        "resourceDeploymentName": "[take(concat(deployment().name, '-network'), 64)]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('resourceDeploymentName')]",
            "resourceGroup": "[parameters('f5ResourceGroup')]",
            "dependsOn": [],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "createNatGateway": {
                        "value": "[parameters('createNatGateway')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "vnetAddressPrefix": {
                        "value": "[parameters('vnetAddressPrefix')]"
                    },
                    "vnetCidrNotation": {
                        "value": "[parameters('vnetCidrNotation')]"
                    },
                    "subnetMask": {
                        "value": "[parameters('subnetMask')]"
                    },
                    "f5SubnetName": {
                        "value": "[parameters('f5SubnetName')]"
                    },
                    "natGatewayName": {
                        "value": "[parameters('natGatewayName')]"
                    },
                    "allowedSourceIpToMgmt": {
                        "value": "[parameters('allowedSourceIpToMgmt')]"
                    },
                    "allowedSourceIpToApp": {
                        "value": "[parameters('allowedSourceIpToApp')]"
                    },
                    "tagValues": {
                        "value": "[parameters('tagValues')]"
                    }
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "createNatGateway": {
                            "type": "bool"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "vnetAddressPrefix": {
                            "type": "string"
                        },
                        "vnetCidrNotation": {
                            "type": "string"
                        },
                        "subnetMask": {
                            "type": "string"
                        },
                        "f5SubnetName": {
                            "type": "string"
                        },
                        "natGatewayName": {
                            "type": "string"
                        },
                        "allowedSourceIpToMgmt": {
                            "type": "string"
                        },

                        "allowedSourceIpToApp": {
                            "type": "string"
                        },
                        "tagValues": {
                            "type": "object"
                        }
                    },
                    "variables": {
                        "demoAppSubnetName": "demoapp-subnet",
                        "natGatewayName": "[concat(parameters('vnetName'), '-vgw')]",
                        "natGatewayPublicIpName": "[concat(parameters('vnetName'), '-vgw-pip-01')]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2020-06-01",
                            "name": "[parameters('f5SubnetName')]",
                            "location": "[resourceGroup().location]",
                            "dependsOn": [],
                            "properties": {
                                "securityRules": [
                                    {
                                        "name": "F5-MGMT",
                                        "properties": {
                                            "description": "DO NOT DELETE - Allows Management of F5 appliances",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "*",
                                            "access": "Allow",
                                            "priority": 300,
                                            "direction": "Inbound",
                                            "sourcePortRanges": [],
                                            "destinationPortRanges": [
                                                "22",
                                                "8443"
                                            ],
                                            "destinationAddressPrefix": "*",
                                            "sourceAddressPrefixes": "[split(parameters('allowedSourceIpToMgmt'),',')]",
                                            "destinationAddressPrefixes": []
                                        }
                                    },
                                    {
                                        "name": "Demo-App-HTTP",
                                        "properties": {
                                            "description": "Allow inbound web traffic to app",
                                            "protocol": "Icmp",
                                            "sourcePortRange": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 400,
                                            "direction": "Inbound",
                                            "sourcePortRanges": [],
                                            "destinationPortRanges": [
                                                "80",
                                                "443"
                                            ],
                                            "sourceAddressPrefixes": "[split(parameters('allowedSourceIpToMgmt'),',')]",
                                            "destinationAddressPrefixes": []
                                        }
                                    },
                                    {
                                        "name": "Deny-All",
                                        "properties": {
                                            "description": "DO NOT DELETE - Denies all traffic unless explicitly allowed",
                                            "protocol": "*",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "*",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Deny",
                                            "priority": 4096,
                                            "direction": "Inbound",
                                            "sourcePortRanges": [],
                                            "destinationPortRanges": [],
                                            "sourceAddressPrefixes": [],
                                            "destinationAddressPrefixes": []
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2020-06-01",
                            "name": "[variables('demoAppSubnetName')]",
                            "location": "[resourceGroup().location]",
                            "dependsOn": [],
                            "properties": {
                                "securityRules": [
                                    {
                                        "name": "HTTP-Inbound",
                                        "properties": {
                                            "description": "Inbound Web Traffic",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "*",
                                            "access": "Allow",
                                            "priority": 300,
                                            "direction": "Inbound",
                                            "sourcePortRanges": [],
                                            "destinationPortRanges": [
                                                "80",
                                                "443"
                                            ],
                                            "sourceAddressPrefixes": "[concat(parameters('vnetAddressPrefix'), '.0.0/', parameters('subnetMask'))]",
                                            "destinationAddressPrefixes": []
                                        }
                                    },
                                    {
                                        "name": "Deny-All",
                                        "properties": {
                                            "description": "DO NOT DELETE - Denies all traffic unless explicitly allowed",
                                            "protocol": "*",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "*",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Deny",
                                            "priority": 4096,
                                            "direction": "Inbound",
                                            "sourcePortRanges": [],
                                            "destinationPortRanges": [],
                                            "sourceAddressPrefixes": [],
                                            "destinationAddressPrefixes": []
                                        }
                                    },
                                    {
                                        "name": "allow_loadBalancer_traffic",
                                        "properties": {
                                            "access": "Allow",
                                            "description": "Outbound traffic through load balancer",
                                            "destinationAddressPrefix": "AzureLoadBalancer",
                                            "destinationPortRange": "*",
                                            "direction": "Outbound",
                                            "priority": 200,
                                            "protocol": "Tcp",
                                            "sourceAddressPrefix": "*",
                                            "sourcePortRange": "*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Network/routeTables",
                            "apiVersion": "2020-06-01",
                            "name": "[parameters('f5SubnetName')]",
                            "location": "[resourceGroup().location]",
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
                            "properties": {}
                        },
                        {
                            "type": "Microsoft.Network/routeTables",
                            "apiVersion": "2020-06-01",
                            "name": "[variables('demoAppSubnetName')]",
                            "location": "[resourceGroup().location]",
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
                            "properties": {}
                        },
                        {
                            "apiVersion": "2020-06-01",
                            "condition": "[parameters('createNatGateway')]",
                            "location": "[resourceGroup().location]",
                            "name": "[variables('natGatewayPublicIpName')]",
                            "properties": {
                                "idleTimeoutInMinutes": 30,
                                "publicIPAllocationMethod": "Static"
                            },
                            "sku": {
                                "name": "Standard"
                            },
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
                            "type": "Microsoft.Network/publicIPAddresses"
                        },
                        {
                            "apiVersion": "2020-06-01",
                            "dependsOn": [
                                "[variables('natGatewayPublicIpName')]"
                            ],
                            "location": "[resourceGroup().location]",
                            "condition": "[parameters('createNatGateway')]",
                            "name": "[variables('natGatewayName')]",
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "idleTimeoutInMinutes": 4,
                                "publicIpAddresses": [
                                    {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('natGatewayPublicIpName'))]"
                                    }
                                ]
                            },
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
                            "type": "Microsoft.Network/natGateways"
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2020-06-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]",
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('f5SubnetName'))]",
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('demoAppSubnetName'))]",
                                "[resourceId('Microsoft.Network/routeTables', parameters('f5SubnetName'))]",
                                "[resourceId('Microsoft.Network/routeTables', variables('demoAppSubnetName'))]"
                            ],
                            "name": "[parameters('vnetName')]",
                            "location": "[resourceGroup().location]",
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[concat(parameters('vnetAddressPrefix'), '.0.0/', parameters('vnetCidrNotation'))]"
                                    ]
                                },
                                "subnets": [
                                    {
                                        "name": "[parameters('f5SubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[concat(parameters('vnetAddressPrefix'), '.0.0/', parameters('subnetMask'))]",
                                            "routeTable": {
                                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('f5SubnetName'))]"
                                            },
                                            "natGateway": "[if(parameters('createNatGateway'), json(concat('{\"id\": \"', resourceId('Microsoft.Network/natGateways', parameters('natGatewayName')), '\"}')), json('null'))]",
                                            "networkSecurityGroup": {
                                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('f5SubnetName'))]"
                                            }
                                        }
                                    },
                                    {
                                        "name": "[variables('demoAppSubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[concat(parameters('vnetAddressPrefix'), '.1.0/', parameters('subnetMask'))]",
                                            "routeTable": {
                                                "id": "[resourceId('Microsoft.Network/routeTables', variables('demoAppSubnetName'))]"
                                            },
                                            "natGateway": "[if(parameters('createNatGateway'), json(concat('{\"id\": \"', resourceId('Microsoft.Network/natGateways', parameters('natGatewayName')), '\"}')), json('null'))]",
                                            "networkSecurityGroup": {
                                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('demoAppSubnetName'))]"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": {
                        "natGateway": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
                        },
                        "virtualNetwork": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "f5Subnet": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('f5SubnetName'))]"
                        },
                        "demoAppSubnet": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('demoAppSubnetName'))]"
                        },
                        "f5RouteTable": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/routeTables', parameters('f5SubnetName'))]"
                        },
                        "demoAppRouteTable": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/routeTables', variables('demoAppSubnetName'))]"
                        },
                        "f5Nsg": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('f5SubnetName'))]"
                        },
                        "demoAppNsg": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('demoAppSubnetName'))]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "deployment": {
            "type": "string",
            "value": "[concat(deployment().name, ' has successfully deployed.')]"
        }
    }
}
