{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "2.8.0.0",
    "parameters": {
        "f5ResourceGroup": {
            "type": "string",
            "defaultValue": "f5rg"
        },
        "createNatGateway": {
            "defaultValue": false,
            "metadata": {
                "description": "You must select Yes to create a NAT gateway to allow outbound access when deploying a standalone BIG-IP VE without a public management IP address. Note: The NAT gateway is applied to subnet0."
            },
            "type": "bool"
        },
        "numSubnets": {
            "defaultValue": 1,
            "type": "Int",
            "metadata": {
                "description": "Indicate the number of subnets to create."
            }
        },
        "vnetName": {
            "defaultValue": "virtualNetwork",
            "type": "string",
            "metadata": {
                "description": "Supply a name for virtual network."
            }
        },
        "vnetAddressPrefix": {
            "defaultValue": "10.0",
            "type": "string",
            "metadata": {
                "description": "Enter the start of the CIDR block used when creating the vnet and subnets.  You MUST type just the first two octets of the /16 virtual network that will be created, for example '10.0', '10.100', 192.168'."
            }
        },
        "cidrNotation": {
            "defaultValue": "16",
            "type": "string",
            "metadata": {
                "description": "Enter the the value for the CIDR notation (ex. 16 for /16, 24 for /24) that will be applied to the subnets created within the virtual network."
            }
        },
        "tagValues": {
            "defaultValue": {
                "application": "f5demoapp",
                "cost": "f5cost",
                "environment": "f5env",
                "group": "f5group",
                "owner": "f5owner"
            },
            "type": "object",
            "metadata": {
                "description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
            }
        }
    },
    "variables": {
        "natGatewayName": "[concat(parameters('vnetName'), '-vgw')]",
        "natGatewayPublicIpName": "[concat(parameters('vnetName'), '-vgw-pip-01')]",
        "resourceDeploymentName": "[take(concat(deployment().name, '-network'), 64)]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('resourceDeploymentName')]",
            "resourceGroup": "[parameters('f5ResourceGroup')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/routeTables",
                            "apiVersion": "2020-06-01",
                            "copy": {
                                "name": "routeTableLoop",
                                "count": "[parameters('numSubnets')]"
                            },
                            "name": "[concat('route-table-subnet-0', copyIndex())]",
                            "location": "[resourceGroup().location]",
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]"
                        },
                        {
                            "apiVersion": "2020-06-01",
                            "condition": "[parameters('createNatGateway')]",
                            "location": "[resourceGroup().location]",
                            "name": "[variables('natGatewayPublicIpName')]",
                            "properties": {
                                "idleTimeoutInMinutes": 30,
                                "publicIPAllocationMethod": "Static"
                            },
                            "sku": {
                                "name": "Standard"
                            },
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
                            "type": "Microsoft.Network/publicIPAddresses"
                        },
                        {
                            "apiVersion": "2020-06-01",
                            "dependsOn": [
                                "[variables('natGatewayPublicIpName')]"
                            ],
                            "location": "[resourceGroup().location]",
                            "condition": "[parameters('createNatGateway')]",
                            "name": "[variables('natGatewayName')]",
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "idleTimeoutInMinutes": 4,
                                "publicIpAddresses": [
                                    {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('natGatewayPublicIpName'))]"
                                    }
                                ]
                            },
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
                            "type": "Microsoft.Network/natGateways"
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2020-06-01",
                            "dependsOn": [
                                "routeTableLoop",
                                "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
                            ],
                            "name": "[parameters('vnetName')]",
                            "location": "[resourceGroup().location]",
                            "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[concat(parameters('vnetAddressPrefix'), '.0.0/', parameters('cidrNotation'))]"
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2020-06-01",
                            "dependsOn": [
                                "[parameters('vnetName')]"
                            ],
                            "name": "[concat(parameters('vnetName'), '/subnet-0', copyIndex())]",
                            "properties": {
                                "addressPrefix": "[concat(parameters('vnetAddressPrefix'), '.', copyIndex('subnetCopy'), '.0/24')]",
                                "routeTable": {
                                    "id": "[resourceId('Microsoft.Network/routeTables', concat('route-table-subnet-0', copyIndex('subnetCopy', 1)))]"
                                },
                                "natGateway": "[if(and(equals(copyIndex('subnetCopy'), 0), parameters('createNatGateway')), json(concat('{\"id\": \"', resourceId('Microsoft.Network/natGateways', variables('natGatewayName')), '\"}')), json('null'))]"
                            },
                            "copy": {
                                "name": "subnetCopy",
                                "count": "[parameters('numSubnets')]"
                            }
                        }
                    ],
                    "outputs": {
                        "natGateway": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
                        },
                        "virtualNetwork": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                        },
                        "routeTables": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/routeTables', concat('route-table-subnet-0', parameters('numSubnets')))]"
                        },
                        "subnets": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), concat('subnet-0', parameters('numSubnets')))]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "deployment": {
            "type": "string",
            "value": "[concat(deployment().name, ' has successfully deployed.')]"
        }
    }
}